{"version":3,"sources":["Comp/Colors.js","Comp/Navbar.jsx","Comp/Footer.jsx","Pages/HomePage.jsx","Utilities/PageProps.js","Utilities/ComponentWithScrollLoad.jsx","Comp/Cards/ProjectCard.jsx","Comp/Cards/EduCard.jsx","Comp/Cards/Title.jsx","Comp/Cards/SkillCard.jsx","Comp/Cards/TextCard.jsx","Comp/Intros.jsx","Pages/SelfIntro.jsx","PageRouter.jsx","App.js","serviceWorker.js","index.js","Comp/Navbar.module.scss"],"names":["Color","primaryColor","primaryFontColor","primaryColorComplimentary","secondaryColor","btnHoverBackgroundColor","btnHoverFontColor","lightTextColorComplimentary","darkTextColor","complimentaryTextColor","logoColor","lightTextColor","skillCardBackgroundColor","Navbar","className","styles","navbarContainer","navbar","href","src","process","navbarLinks","to","btn","Footer","jsx","Colors","HomePage","props","PageProps","maxWidth","ComponentWithScrollLoad","Component","state","loading","ref","React","createRef","node","this","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","setState","unobserve","observe","disconnect","loadingText","Loading","style","color","div","animate","scale","borderRadius","overflow","transition","duration","url","name","imgText","initial","x","major","time","school","location","link","target","rel","info","text","skillName","skillInfo","textAlign","textStyle","Intro","gridArea","padding","width","margin","IntroPage","Intros","PageRouter","path","component","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"qNAeeA,G,YAfD,CACZC,aAAc,UACdC,iBAAkB,UAClBC,0BAA2B,UAC3BC,eAAgB,UAChBC,wBAAyB,wBACzBC,kBAAmB,UACnBC,4BAA6B,UAC7BC,cAAe,UACfC,uBAAwB,UACxBC,UAAW,UACXC,eAAgB,UAChBC,yBAA0B,Y,8BCoBbC,EA5BA,WACb,OACE,yBAAKC,UAAWC,IAAOC,iBACrB,yBAAKF,UAAWC,IAAOE,QACrB,4BACE,uBAAGC,KAAK,6BACN,yBAAKC,IAAG,UAAKC,aAAL,2BAGZ,yBAAKN,UAAWC,IAAOM,aACrB,kBAAC,IAAD,CAASC,GAAG,eAAeR,UAAWC,IAAOQ,KAA7C,eAGA,kBAAC,IAAD,CAASD,GAAG,SAASR,UAAWC,IAAOQ,KAAvC,aAGA,kBAAC,IAAD,CAASD,GAAG,SAASR,UAAWC,IAAOQ,KAAvC,SAGA,uBAAGT,UAAWC,IAAOQ,IAAKL,KAAK,QAA/B,gBCoBKM,EAxCA,WACb,OACE,yBAAKV,UAAU,oBACb,yBAAKA,UAAU,aACb,uBAAGI,KAAK,sCACN,uBAAGJ,UAAU,4BAEf,uBAAGI,KAAK,KACN,uBAAGJ,UAAU,2BAEf,uBAAGI,KAAK,mDACN,uBAAGJ,UAAU,2BAEf,wEAEF,2BAAOW,KAAG,GAAV,0PASaC,EAAOvB,0BATpB,yIAcauB,EAAOnB,4BAdpB,iGCDSoB,EAbE,SAACC,GAChB,OACE,yBAAKd,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,OAEF,6BAASA,UAAU,YACjB,kBAAC,EAAD,SCPOe,EAJG,CAChBC,SAAU,U,uCCuCGC,EArCiB,SAACC,GAC/B,mNACEC,MAAQ,CAAEC,SAAS,GADrB,EAEEC,IAAMC,IAAMC,YAFd,kEAIuB,IAAD,OACZC,EAAOC,KAAKJ,IAAIK,QACtBD,KAAKE,SAAW,IAAIC,sBAAqB,SAACC,EAASF,GACjDE,EAAQC,SAAQ,SAACC,GACXA,EAAMC,iBACR,EAAKC,SAAS,CAAEb,SAAS,IACzBO,EAASO,UAAUV,UAIzBC,KAAKE,SAASQ,QAAQX,KAd1B,6CAkBIC,KAAKE,SAASS,eAlBlB,+BAuBI,GADoBX,KAAKN,MAAjBC,QACK,CACX,IAAMiB,EAAcZ,KAAKX,MAAMwB,SAAW,UAC1C,OACE,yBAAKjB,IAAKI,KAAKJ,IAAKkB,MAAO,CAAEC,MAAM,GAAD,OAAK5B,EAAOzB,gBAC3CkD,GAIP,OAAO,kBAACnB,EAAcO,KAAKX,WA/B/B,GAAqBQ,IAAMJ,YCqFdD,KApFK,SAACH,GACnB,OACE,yBAAKd,UAAU,yBACb,kBAAC,IAAOyC,IAAR,CACEC,QAAS,CACPC,MAAO,CAAC,GAAK,KAAM,GACnBC,aAAc,CAAC,MAAO,EAAG,GACzBC,SAAU,UAEZC,WAAY,CAAEC,SAAU,KAExB,uBAAG3C,KAAMU,EAAMkC,KACb,yBAAKhD,UAAU,QACb,yBAAKK,IAAG,UAAKC,aAAL,YAA+BQ,EAAMmC,KAArC,UACR,yBAAKjD,UAAU,aACb,2BAAIc,EAAMoC,aAMlB,2BAAOvC,KAAG,GAAV,geAiBoBC,EAAOtB,eAjB3B,ujCAkDesB,EAAOjB,uBAlDtB,6OCoDSsB,KAzEC,SAACH,GACf,OACE,kBAAC,IAAO2B,IAAR,CACEU,QAAS,CAAEC,GAAI,IAAKT,MAAO,GAC3BD,QAAS,CAAEU,EAAG,EAAGT,MAAO,GACxBG,WAAY,CAAEC,SAAU,KAExB,yBAAK/C,UAAU,qBACb,4BAAKc,EAAMuC,OACX,4BACGvC,EAAMwC,KADT,IACe,0BAAMtD,UAAU,YAAhB,OACZc,EAAMyC,QAET,uBAAGvD,UAAU,YAAYc,EAAM0C,UAC/B,2BACE,uBAAGpD,KAAMU,EAAM2C,KAAMC,OAAO,SAASC,IAAI,uBACtC7C,EAAM8C,QAIb,2BAAOjD,KAAG,GAAV,+NAO6BC,EAAOvB,0BAPpC,oUAmBkBuB,EAAOzB,aAnBzB,0CAoBwByB,EAAOvB,0BApB/B,4GAyBauB,EAAOf,eAzBpB,yIA8Bae,EAAOhB,UA9BpB,8IAmCagB,EAAOlB,cAnCpB,0LA0CakB,EAAOf,eA1CpB,4IA+Cae,EAAOf,eA/CpB,6BCiBSoB,KArCD,SAACH,GACb,OACE,kBAAC,IAAO2B,IAAR,CACEU,QAAS,CAAEC,GAAI,IAAKT,MAAO,GAC3BD,QAAS,CAAEU,EAAG,EAAGT,MAAO,GACxBG,WAAY,CAAEC,SAAU,KAExB,yBAAK/C,UAAU,SACb,wBAAIA,UAAU,aAAac,EAAM+C,MACjC,yBAAK7D,UAAU,eAEjB,2BAAOW,KAAG,GAAV,4ZAekBC,EAAOvB,0BAfzB,8IC0CS4B,KArDG,SAACH,GACjB,OACE,kBAAC,IAAO2B,IAAR,CACEU,QAAS,CAAEC,GAAI,IAAKT,MAAO,GAC3BD,QAAS,CAAEU,EAAG,EAAGT,MAAO,GACxBG,WAAY,CAAEC,SAAU,KAExB,yBAAK/C,UAAU,uBACb,yBAAKA,UAAU,cAAcc,EAAMgD,WACnC,yBAAK9D,UAAU,cAAcc,EAAMiD,YAErC,2BAAOpD,KAAG,GAAV,kEAEkBC,EAAOd,yBAFzB,wZAgBac,EAAOnB,4BAhBpB,iiBCaSwB,KAxBE,SAACH,GAChB,OACE,kBAAC,IAAO2B,IAAR,KACE,yBAAKzC,UAAU,sBACb,2BAAIc,EAAM+C,OAEZ,2BAAOlD,KAAG,GAAV,iEAEkBC,EAAOd,yBAFzB,sFAKkBgB,EAAMkD,UALxB,2KAWkBlD,EAAMmD,UAXxB,6BC2PSC,EA5PD,WACZ,OACE,yBAAKlE,UAAU,mBACb,kBAAC,IAAOyC,IAAR,CACEU,QAAS,CAAEC,GAAI,IAAKT,MAAO,GAC3BD,QAAS,CAAEU,EAAG,EAAGT,MAAO,GACxBG,WAAY,CAAEC,SAAU,KAExB,yBAAK/C,UAAU,mBACb,wCACA,uBAAGA,UAAU,cAAb,kMAOJ,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAO6D,KAAK,yBACZ,kBAAC,EAAD,CACE7D,UAAU,QACVsD,KAAK,iBACLC,OAAO,sBACPF,MAAM,8BACNG,SAAS,eACTI,KAAK,iBACLH,KAAK,iCAEP,kBAAC,EAAD,CACEzD,UAAU,QACVsD,KAAK,oBACLC,OAAO,gCACPF,MAAM,+BACNG,SAAS,kBACTI,KAAK,sBAGT,yBAAK5D,UAAU,iBACb,kBAAC,EAAD,CAAO6D,KAAK,gBACZ,kBAAC,EAAD,CACE7D,UAAU,QACVsD,KAAK,oBACLC,OAAO,iBACPF,MAAM,sBACNG,SAAS,kBACTI,KAAK,sDACLH,KAAK,6BAEP,kBAAC,EAAD,CACEzD,UAAU,QACVsD,KAAK,oBACLC,OAAO,+BACPF,MAAM,sBACNG,SAAS,kBACTI,KAAK,gEAIX,yBAAK5D,UAAU,sBACb,yBAAKA,UAAU,aAAauC,MAAO,CAAE4B,SAAU,cAC7C,kBAAC,EAAD,CAAON,KAAK,aACZ,uBACEtB,MAAO,CACL6B,QAAS,OACTJ,UAAW,SACXK,MAAO,MACPC,OAAQ,SALZ,2DAWF,kBAAC,EAAD,CACErB,KAAK,MACLC,QAAQ,sDACRX,MAAO,CAAE4B,SAAU,UAErB,kBAAC,EAAD,CACElB,KAAK,SACLC,QAAQ,6CACRX,MAAO,CAAE4B,SAAU,UAErB,kBAAC,EAAD,CACElB,KAAK,WACLC,QAAQ,kBACRF,IAAI,wBACJT,MAAO,CAAE4B,SAAU,WAGvB,yBAAKnE,UAAU,kCACb,kBAAC,EAAD,CAAO6D,KAAK,SAAS7D,UAAU,UAC/B,kBAAC,EAAD,CACE8D,UAAU,WACVC,UAAU,8CAEZ,kBAAC,EAAD,CAAWD,UAAU,kBAAkBC,UAAU,uBACjD,kBAAC,EAAD,CAAWD,UAAU,WAAWC,UAAU,6BAE5C,yBAAK/D,UAAU,gCACb,kBAAC,EAAD,CAAO6D,KAAK,iBACZ,kBAAC,EAAD,CACEA,KAAI,+IACJI,UAAU,YAGd,yBAAKjE,UAAU,kCACb,kBAAC,EAAD,CAAO6D,KAAK,WACZ,kBAAC,EAAD,CACEA,KAAI,uEACJG,UAAU,SACVC,UAAU,YAGd,2BAAOtD,KAAG,GAAV,4FAImBI,EAAUC,SAJ7B,+aAkBgBJ,EAAOnB,4BAlBvB,+MAyB2Ba,aAzB3B,wjBA4CeM,EAAOzB,aA5CtB,g6ECzGSoF,EAdG,SAACzD,GACjB,OACE,yBAAKd,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,OAEF,6BAASA,UAAU,YACjB,kBAACwE,EAAD,MACA,kBAAC,EAAD,SCEOC,EAXI,SAAC3D,GAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4D,KAAK,eAAeC,UAAW,kBAAM,qCAC5C,kBAAC,IAAD,CAAOD,KAAK,aAAaC,UAAW,kBAAM,qCAC1C,kBAAC,IAAD,CAAOD,KAAK,SAASC,UAAWJ,IAChC,kBAAC,IAAD,CAAOG,KAAK,IAAIC,UAAW9D,MCUlB+D,EAfH,SAAC9D,GACX,OACE,kBAAC,IAAD,KACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,MACA,2BAAOW,KAAG,GAAV,iDAEaC,EAAOxB,iBAFpB,gCCEYyF,QACW,cAA7BC,OAAOtB,SAASuB,UAEe,UAA7BD,OAAOtB,SAASuB,UAEhBD,OAAOtB,SAASuB,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBExI5BC,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,OAAS,uBAAuB,YAAc,+B","file":"static/js/main.6a2acdf1.chunk.js","sourcesContent":["const Color = {\n  primaryColor: \"#111D2B\",\n  primaryFontColor: \"#D9F2FF\",\n  primaryColorComplimentary: \"#85704D\",\n  secondaryColor: \"#BED6F1\",\n  btnHoverBackgroundColor: \"rgba(235,216,183,0.7)\",\n  btnHoverFontColor: \"#172639\",\n  lightTextColorComplimentary: \"#FFEAC7\",\n  darkTextColor: \"#172639\",\n  complimentaryTextColor: \"#A18F6F\",\n  logoColor: \"#E3C084\",\n  lightTextColor: \"#E0EFFF\",\n  skillCardBackgroundColor: \"#284263\",\n};\n\nexport default Color;\n","import React from \"react\";\nimport styles from \"./Navbar.module.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className={styles.navbarContainer}>\n      <div className={styles.navbar}>\n        <h1>\n          <a href=\"http://zehao99.github.io/\">\n            <img src={`${process.env.PUBLIC_URL}/img/logo-light.png`} />\n          </a>\n        </h1>\n        <div className={styles.navbarLinks}>\n          <NavLink to=\"/collections\" className={styles.btn}>\n            Collections\n          </NavLink>\n          <NavLink to=\"/about\" className={styles.btn}>\n            Portfolio\n          </NavLink>\n          <NavLink to=\"/about\" className={styles.btn}>\n            About\n          </NavLink>\n          <a className={styles.btn} href=\"/lzh\">\n            Calories\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport Colors from \"./Colors\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-container\">\n      <div className=\"sns-icons\">\n        <a href=\"https://www.instagram.com/zehao99/\">\n          <i className=\"fab fa-instagram fa-2x\"></i>\n        </a>\n        <a href=\"#\">\n          <i className=\"far fa-envelope fa-2x\"></i>\n        </a>\n        <a href=\"https://www.linkedin.com/in/zehao-li-49ab9615b/\">\n          <i className=\"fab fa-linkedin fa-2x\"></i>\n        </a>\n        <p>Zehao Li, 2020 &copy; all rights reserved.</p>\n      </div>\n      <style jsx>{`\n        .footer-container {\n          text-align: center;\n        }\n        .footer-container .sns-icons {\n          margin-top: 1rem;\n        }\n        .footer-container .sns-icons a {\n          padding: 0 1rem;\n          color: ${Colors.primaryColorComplimentary};\n          transition: all 0.3s ease-in-out;\n        }\n\n        .footer-container .sns-icons a:hover {\n          color: ${Colors.lightTextColorComplimentary};\n        }\n\n        .footer-container p {\n          padding: 1rem;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Navbar from \"../Comp/Navbar\";\nimport Footer from \"../Comp/Footer\";\n\nconst HomePage = (props) => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar />\n      </header>\n      <section className=\"App-body\">\n        <Footer />\n      </section>\n    </div>\n  );\n};\n\nexport default HomePage;\n","const PageProps = {\n  maxWidth: \"1200px\",\n};\n\nexport default PageProps;\n","import React from \"react\";\nimport Colors from \"../Comp/Colors\";\n\nconst ComponentWithScrollLoad = (Component) => {\n  return class extends React.Component {\n    state = { loading: true };\n    ref = React.createRef();\n\n    componentDidMount() {\n      const node = this.ref.current;\n      this.observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.setState({ loading: false });\n            observer.unobserve(node);\n          }\n        });\n      });\n      this.observer.observe(node);\n    }\n\n    componentWillUnmount() {\n      this.observer.disconnect();\n    }\n\n    render() {\n      const { loading } = this.state;\n      if (loading) {\n        const loadingText = this.props.Loading || \"loading\";\n        return (\n          <div ref={this.ref} style={{ color: `${Colors.primaryColor}` }}>\n            {loadingText}\n          </div>\n        );\n      }\n      return <Component {...this.props} />;\n    }\n  };\n};\n\nexport default ComponentWithScrollLoad;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport Colors from \"../Colors\";\nimport ComponentWithScrollLoad from \"../../Utilities/ComponentWithScrollLoad.jsx\";\n\nconst ProjectCard = (props) => {\n  return (\n    <div className=\"projectcard-container\">\n      <motion.div\n        animate={{\n          scale: [0.5, 1.05, 1],\n          borderRadius: [\"50%\", 0, 0],\n          overflow: \"hidden\",\n        }}\n        transition={{ duration: 0.3 }}\n      >\n        <a href={props.url}>\n          <div className=\"card\">\n            <img src={`${process.env.PUBLIC_URL}/${props.name}.jpg`} />\n            <div className=\"card-text\">\n              <p>{props.imgText}</p>\n            </div>\n          </div>\n        </a>\n      </motion.div>\n\n      <style jsx>\n        {`\n          .projectcard-container {\n            max-width: 200px;\n            max-height: 200px;\n            margin: 1rem;\n            transition: all 0.3s ease-in-out;\n          }\n          .projectcard-container .card {\n            position: relative;\n            overflow: hidden;\n          }\n\n          .projectcard-container .card::after {\n            content: \"\";\n            position: absolute;\n            display: block;\n            background: ${Colors.secondaryColor};\n            opacity: 0.9;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            transform: scale(2) translateX(-75%) translateY(-75%) rotate(-25deg);\n            transition: transform 0.8s cubic-bezier(0.2, 1, 1, 1);\n          }\n\n          .projectcard-container .card:hover::after {\n            transform: scale(2) translateX(0) translateY(0) rotate(-25deg);\n          }\n          .projectcard-container .card img {\n            width: 100%;\n            height: 100%;\n            transition: transform 0.4s ease-in-out;\n          }\n          .projectcard-container .card:hover img {\n            transform: scale(1.05);\n          }\n\n          .projectcard-container .card .card-text {\n            font-family: \"Sora\", sans-serif;\n            font-size: 1rem;\n            z-index: 100;\n            opacity: 0;\n            padding: 2rem;\n            position: absolute;\n            text-align: center;\n            top: 50%;\n            left: 0;\n            right: 0;\n            color: ${Colors.complimentaryTextColor};\n            transform: translateY(-50%);\n            transition: all 0.6s ease-in-out 0.15s ease-in-out;\n          }\n          .projectcard-container .card:hover .card-text {\n            opacity: 1;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default ComponentWithScrollLoad(ProjectCard);\n","import React from \"react\";\nimport Colors from \"../Colors\";\nimport { motion } from \"framer-motion\";\nimport ComponentWithScrollLoad from \"../../Utilities/ComponentWithScrollLoad.jsx\";\n\nconst EduCard = (props) => {\n  return (\n    <motion.div\n      initial={{ x: -500, scale: 0 }}\n      animate={{ x: 0, scale: 1 }}\n      transition={{ duration: 0.4 }}\n    >\n      <div className=\"educard-container\">\n        <h4>{props.major}</h4>\n        <h5>\n          {props.time} <span className=\"interval\"> | </span>\n          {props.school}\n        </h5>\n        <p className=\"location\">{props.location}</p>\n        <p>\n          <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {props.info}\n          </a>\n        </p>\n      </div>\n      <style jsx>{`\n        .educard-container {\n          position: relative;\n          background: #44546c;\n          padding: 1rem;\n          margin: 1rem auto;\n          max-width: 500px;\n          border-left: 5px solid ${Colors.primaryColorComplimentary};\n          border-radius: 3px;\n          box-shadow: 3px 3px 5px rgba(1, 1, 1, 0.3);\n        }\n\n        .educard-container::after {\n          content: \"\";\n          width: 10px;\n          height: 10px;\n          position: absolute;\n          top: 10px;\n          left: -12.4px;\n          background: ${Colors.primaryColor};\n          border: 5px solid ${Colors.primaryColorComplimentary};\n          border-radius: 50%;\n        }\n\n        .educard-container h4 {\n          color: ${Colors.lightTextColor};\n          margin: 0.5rem auto;\n          font-size: 1.2rem;\n        }\n        .educard-container h5 {\n          color: ${Colors.logoColor};\n          font-size: 1.2rem;\n          margin: 0.5rem auto;\n        }\n        .educard-container h5 span {\n          color: ${Colors.darkTextColor};\n          font-size: 1.2rem;\n        }\n        .educard-container .location {\n          font-style: italic;\n        }\n        .educard-container p {\n          color: ${Colors.lightTextColor};\n          margin: 0.5rem auto;\n        }\n        .educard-container a {\n          text-decoration: none;\n          color: ${Colors.lightTextColor};\n        }\n      `}</style>\n    </motion.div>\n  );\n};\nexport default ComponentWithScrollLoad(EduCard);\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport Colors from \"../Colors\";\nimport ComponentWithScrollLoad from \"../../Utilities/ComponentWithScrollLoad.jsx\";\n\nconst Title = (props) => {\n  return (\n    <motion.div\n      initial={{ x: -100, scale: 0 }}\n      animate={{ x: 0, scale: 1 }}\n      transition={{ duration: 0.4 }}\n    >\n      <div className=\"title\">\n        <h3 className=\"subtitles\">{props.text}</h3>\n        <div className=\"underline\"></div>\n      </div>\n      <style jsx>{`\n        .title {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n        .title .subtitles {\n          text-align: center;\n          padding: 2rem;\n          padding-bottom: 0.3rem;\n          font-weight: 400;\n          font-size: 1.5rem;\n        }\n        .title .underline {\n          background: ${Colors.primaryColorComplimentary};\n          height: 5px;\n          width: 30px;\n          border-radius: 2.5px;\n          margin-bottom: 1rem;\n        }\n      `}</style>\n    </motion.div>\n  );\n};\n\nexport default ComponentWithScrollLoad(Title);\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport Colors from \"../Colors\";\nimport ComponentWithScrollLoad from \"../../Utilities/ComponentWithScrollLoad.jsx\";\n\nconst SkillCard = (props) => {\n  return (\n    <motion.div\n      initial={{ x: -100, scale: 0 }}\n      animate={{ x: 0, scale: 1 }}\n      transition={{ duration: 0.4 }}\n    >\n      <div className=\"skillcard-container\">\n        <div className=\"skill-name\">{props.skillName}</div>\n        <div className=\"skill-info\">{props.skillInfo}</div>\n      </div>\n      <style jsx>{`\n        .skillcard-container {\n          background: ${Colors.skillCardBackgroundColor};\n          width: 80%;\n          display: grid;\n          grid-template-areas: \"name info\";\n          grid-template-columns: 1fr 1fr;\n          margin: 0 auto;\n        }\n\n        .skillcard-container .skill-name {\n          grid-area: name;\n          padding: 0.75rem;\n          font-family: \"Sora\", sans-serif;\n          text-align: center;\n          width: 100%;\n          color: ${Colors.lightTextColorComplimentary};\n        }\n        .skillcard-container .skill-info {\n          grid-area: info;\n          padding: 0.8rem;\n          text-align: center;\n          width: 100%;\n        }\n\n        @media (max-width: 800px) {\n          .skillcard-container {\n            grid-template-areas:\n              \"name\"\n              \"info\";\n            grid-template-columns: 1fr;\n          }\n          .skillcard-container .skill-info {\n            padding: 0.25rem 1rem;\n            padding-bottom: 0.75rem;\n          }\n        }\n      `}</style>\n    </motion.div>\n  );\n};\n\nexport default ComponentWithScrollLoad(SkillCard);\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport Colors from \"../Colors\";\nimport ComponentWithScrollLoad from \"../../Utilities/ComponentWithScrollLoad\";\n\nconst TextCard = (props) => {\n  return (\n    <motion.div>\n      <div className=\"textcard-container\">\n        <p>{props.text}</p>\n      </div>\n      <style jsx>{`\n        .textcard-container {\n          background: ${Colors.skillCardBackgroundColor};\n          width: 80%;\n          margin: 0 auto;\n          text-align: ${props.textAlign};\n          padding: 1rem;\n        }\n        .textcard-container p {\n          margin-top: 0.5rem;\n          margin-bottom: 0.4rem;\n          font-style: ${props.textStyle};\n        }\n      `}</style>\n    </motion.div>\n  );\n};\n\nexport default ComponentWithScrollLoad(TextCard);\n","import React from \"react\";\nimport PageProps from \"../Utilities/PageProps\";\nimport ProjectCard from \"./Cards/ProjectCard\";\nimport Colors from \"./Colors\";\nimport { motion } from \"framer-motion\";\nimport EduCard from \"./Cards/EduCard\";\nimport Title from \"./Cards/Title\";\nimport SkillCard from \"./Cards/SkillCard\";\nimport TextCard from \"./Cards/TextCard\";\n\nconst Intro = () => {\n  return (\n    <div className=\"intro-container\">\n      <motion.div\n        initial={{ x: -100, scale: 0 }}\n        animate={{ x: 0, scale: 1 }}\n        transition={{ duration: 0.4 }}\n      >\n        <div className=\"about-container\">\n          <h3>About Me</h3>\n          <p className=\"about-text\">\n            I'm currently a master degree student at University of Tokyo,\n            working in the field of robot-human interfaces. Photography is my\n            hobby. I like challenging new things and making discoveries.\n          </p>\n        </div>\n      </motion.div>\n      <div className=\"past-info-container\">\n        <div className=\"edu-container\">\n          <Title text=\"Education Background\" />\n          <EduCard\n            className=\"edu-1\"\n            time=\"2019.09. - Now\"\n            school=\"University of Tokyo\"\n            major=\"MS in Precision Engineering\"\n            location=\"Tokyo, Japan\"\n            info=\"AML Laboratory\"\n            link=\"https://aml.t.u-tokyo.ac.jp/\"\n          ></EduCard>\n          <EduCard\n            className=\"edu-1\"\n            time=\"2015.09.-2019.06.\"\n            school=\"Shanghai Jiao Tong University\"\n            major=\"BS in Mechanical Engineering\"\n            location=\"Shanghai, China\"\n            info=\"Minor in Finance\"\n          ></EduCard>\n        </div>\n        <div className=\"exp-container\">\n          <Title text=\"Experiences\" />\n          <EduCard\n            className=\"exp-1\"\n            time=\"2018.06.-2018.09.\"\n            school=\"Microport Inc.\"\n            major=\"CAE Engineer Intern\"\n            location=\"Shanghai, China\"\n            info=\"Cardiovascular stent contract and expand simulation\"\n            link=\"http://www.microport.com\"\n          ></EduCard>\n          <EduCard\n            className=\"exp-1\"\n            time=\"2017.06.-2018.06.\"\n            school=\"SJTU Photography Association\"\n            major=\"President of SJTUPA\"\n            location=\"Shanghai, China\"\n            info=\"One of the 10 'Five-Star Students' Associations in campus\"\n          ></EduCard>\n        </div>\n      </div>\n      <div className=\"projects-container\">\n        <div className=\"title-area\" style={{ gridArea: \"subtitles\" }}>\n          <Title text=\"Projects\" />\n          <p\n            style={{\n              padding: \"2rem\",\n              textAlign: \"center\",\n              width: \"70%\",\n              margin: \"auto\",\n            }}\n          >\n            Now I'm working in the field of robot-human interfaces\n          </p>\n        </div>\n        <ProjectCard\n          name=\"EIT\"\n          imgText=\"Flexible Proximity Sensor With Tomographic Approach\"\n          style={{ gridArea: \"card\" }}\n        />\n        <ProjectCard\n          name=\"UWBAGV\"\n          imgText=\"Positioning System for Port AGVs using UWB\"\n          style={{ gridArea: \"card\" }}\n        />\n        <ProjectCard\n          name=\"Calories\"\n          imgText=\"Calories Search\"\n          url=\"https://calories.page\"\n          style={{ gridArea: \"card\" }}\n        />\n      </div>\n      <div className=\"skill-container text-container\">\n        <Title text=\"Skills\" className=\"title\" />\n        <SkillCard\n          skillName=\"Language\"\n          skillInfo=\"Python, C++, MATLAB, Javascript, HTML&CSS\"\n        />\n        <SkillCard skillName=\"CAE & Modelling\" skillInfo=\"Solidworks, ABAQUS\" />\n        <SkillCard skillName=\"Creative\" skillInfo=\"Photoshop, Premiere Pro\" />\n      </div>\n      <div className=\"pub-container text-container\">\n        <Title text=\"Publications\" />\n        <TextCard\n          text={`Zehao Li, Shunshuke Yoshimoto and Akio Yamamoto, \"Tomographic Approach for Proximity Imaging using Conductive Sheet\", IECON 2020. (Accepted)`}\n          textStyle=\"italic\"\n        />\n      </div>\n      <div className=\"award-container text-container\">\n        <Title text=\"Awards\" />\n        <TextCard\n          text={`The First Prize of Annual Photography Contest of VCG and 500px, 2016`}\n          textAlign=\"center\"\n          textStyle=\"italic\"\n        />\n      </div>\n      <style jsx>\n        {`\n          .intro-container {\n            margin: auto;\n            max-width: ${PageProps.maxWidth};\n          }\n        \n          \n          .intro-container .about-container{\n              background: rgba(23,38,57, 0.6);\n              position: relative;\n              width: 100%;\n              height: 200px;\n              overflow: hidden;\n              display: flex;\n              flex-direction:column;\n              align-items:center;\n              justify-content:center;\n              color:${Colors.lightTextColorComplimentary}\n          }\n\n          .intro-container .about-container::before{\n              content: \"\";\n              position: absolute;\n              display: block;\n              background: url(\"${process.env.PUBLIC_URL}/about_bg.jpg\") no-repeat center center/cover;\n              width: 100%;\n              height: 100%;\n              top: 0;\n              left: 0;\n              z-index: -1;\n          }\n\n          .intro-container .about-container h3{\n            display: block;\n            width: 100%;\n            max-width: 800px;\n            align-self: center;\n            margin: 1rem 3rem;\n            margin-top: 0.5rem;\n        }\n\n          .intro-container .about-container p{\n            background: rgba(255,242,219,0.75);\n            color: ${Colors.primaryColor};\n            max-width: 800px;\n            margin: 0 3rem;\n            padding: 1rem;\n            line-height: 1.5rem;\n        }\n\n        .intro-container .past-info-container{\n          display: grid;\n          grid-template-column: 1fr 1fr;\n          grid-template-areas: \"edu exp\";\n        }\n        .intro-container .past-info-container .edu-container{\n          grid-area:\"edu\";\n          padding:0 2rem;\n        }\n        .intro-container .past-info-container .exp-container{\n          grid-area:\"exp\";\n          padding:0 2rem;\n        }\n\n          .intro-container .projects-container {\n            margin: 1rem 0;\n            display: grid;\n            width: 100%;\n            grid-template-areas: \"subtitles card card card\";\n            grid-template-columns: 1fr 1fr 1fr 1fr;\n            justify-items: center;\n          }\n\n          .intro-container .edu-background-container {\n          }\n\n          .intro-container .text-container{\n            margin-top: 1rem;\n          }\n\n          .intro-container .text-container title{\n            margin-top: 1rem;\n          }\n\n          .intro-container .award-container {\n            margin-bottom: 3rem;\n          }\n          @media (max-width:916px){\n            .intro-container .about-container h3{\n              display: block;\n              width: 100%;\n              padding: 0 3rem;\n            }\n            .intro-container .past-info-container{\n              display: grid;\n              grid-template-column: 1fr;\n              grid-template-areas: \"edu\" \"exp\";\n            }\n          }\n\n          @media (max-width:800px) and (min-width:600px){\n            .intro-container .about-container{\n                height: 250px;\n            }\n\n            .intro-container .projects-container {\n              grid-template-areas:\n                \"subtitles\" \"card\"\n                \"card\" \"card\";\n              grid-template-columns: 1fr 1fr;\n            }\n\n          }\n\n\n          @media (max-width: 600px) {\n            .intro-container .projects-container {\n              grid-template-areas:\n                \"subtitles\"\n                \"card\"\n                \"card\"\n                \"card\";\n              grid-template-columns: 1fr;\n              justify-items: center;\n            }\n\n            .intro-container .about-container{\n                height: 400px;\n            }\n          }\n        `}\n        )\n      </style>\n    </div>\n  );\n};\n\nexport default Intro;\n","import React from \"react\";\nimport Navbar from \"../Comp/Navbar\";\nimport Footer from \"../Comp/Footer\";\nimport Intros from \"../Comp/Intros\";\n\nconst IntroPage = (props) => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar />\n      </header>\n      <section className=\"App-body\">\n        <Intros />\n        <Footer />\n      </section>\n    </div>\n  );\n};\n\nexport default IntroPage;\n","import React from \"react\";\nimport { Route, NavLink, Switch, Redirect } from \"react-router-dom\";\nimport HomePage from \"./Pages/HomePage\";\nimport IntroPage from \"./Pages/SelfIntro\";\nconst PageRouter = (props) => {\n  return (\n    <Switch>\n      <Route path=\"/collections\" component={() => <h1>Hi</h1>} />\n      <Route path=\"/landscape\" component={() => <h1>Hi</h1>} />\n      <Route path=\"/about\" component={IntroPage} />\n      <Route path=\"/\" component={HomePage} />\n    </Switch>\n  );\n};\n\nexport default PageRouter;\n","import React from \"react\";\nimport \"./App.css\";\nimport Colors from \"./Comp/Colors\";\nimport PageRouter from \"./PageRouter\";\nimport { HashRouter as Router } from \"react-router-dom\";\nconst App = (props) => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <PageRouter />\n        <style jsx>{`\n          body {\n            color: ${Colors.primaryFontColor};\n          }\n        `}</style>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"Navbar_navbarContainer__2-s-m\",\"navbar\":\"Navbar_navbar__ZV8bY\",\"navbarLinks\":\"Navbar_navbarLinks__kVieN\"};"],"sourceRoot":""}